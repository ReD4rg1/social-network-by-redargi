{"version":3,"sources":["components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css","components/Profile/Profile.module.css","components/Dialogs/Dialogs.module.css","components/Login/Login.module.css","components/Navbar/Navbar.jsx","redux/dialogs-reducer.js","assets/img/Anos.jpg","components/Dialogs/DialogItems/DialogItem.jsx","assets/img/avatar.jpg","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","api/api.js","redux/find-users-reducer.js","components/FindUsers/UsersItems/UsersItem.jsx","components/FindUsers/Paginator.jsx","components/FindUsers/FindUsers.jsx","assets/img/Loading2.svg","components/common/Preloader/Preloader.js","components/FindUsers/FindUsersContainer.jsx","assets/img/backgroundArt.jpg","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/profile-reducer.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatus/ProfileStatus.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","assets/img/logo.svg","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","redux/app-reducer.js","App.js","redux/redux-store.js","index.js","components/FindUsers/UsersItems/UsersItem.module.css","components/Profile/MyPosts/Post/Post.module.css","components/FindUsers/FindUsers.module.css","components/Dialogs/DialogItems/DialogItem.module.css","components/Dialogs/Messages/Messages.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/ProfileStatus/ProfileStatus.module.css"],"names":["module","exports","Navbar","className","styles","navContent","item","to","isActive","active","navSettings","href","UPDATE_NEW_MESSAGE_TEXT","ADD_MESSAGE","initialState","dialogsData","id","name","message","messagesData","newMessageText","dialogsReducer","state","action","type","newText","DialogItem","props","container","src","avatar","alt","itemName","messageItem","Messages","image","avatarAnos","userName","userMessage","Dialogs","dialogsElements","map","dialog","messagesElements","newMessageElement","React","createRef","dialogs","dialogsTitle","dialogItems","messages","messagesUser","messagesUserName","messagesUserImage","messageItems","messageSend","onChange","text","current","value","onMessageChange","ref","rows","onClick","addMessage","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","connect","compose","store","dialogsPage","dispatch","updateNewMessageTextActionCreator","instance","axios","create","withCredentials","baseURL","headers","usersAPI","get","currentPage","pageSize","then","response","data","post","userId","delete","profileAPI","status","put","authAPI","email","password","rememberMe","FOLLOW","UPDATE_NEW_FIND_USERS_TEXT","SET_USERS","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","IS_FOLLOWING_PROGRESS","users","newFindUsersText","totalUsersCount","isFetching","followingInProgress","follow","fetching","findUsersReducer","user","followed","filter","newPage","UsersItem","followedStatus","following","photo","disabled","some","info","location","country","city","Paginator","pagesCount","Math","ceil","pages","i","push","page","pageNumber","onPageChange","pageNumberActive","FindUsers","textareaRef","search","updateNewFindUsersText","photos","small","Preloader","style","preloader","FindUsersAPIComponent","findUsersPage","getUsers","followToggle","a","items","totalCount","resultCode","Post","userInfo","postContent","postText","likes","likePost","likesCounts","likesCount","MyPosts","postsElements","profilePage","postsData","newPostElement","posts","postsTitle","postsSend","updateNewPostText","newPostText","addPost","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","profileData","setStatus","statusText","profileReducer","MyPostsContainer","ProfileStatus","editMode","statusChanged","toggleEditMode","setState","onStatusChange","e","currentTarget","onClickApply","updateStatus","onClickCancel","prevProps","prevState","snapshot","isOwner","statusEditor","autoFocus","onBlur","statusContainer","Profile","fullName","aboutMe","lookingForAJob","webSite","contacts","website","lookingForAJobDescription","smallPhoto","userArt","largePhoto","backArt","large","imgContainer","imgMutableContainer","otherContainer","userInfoContainer","infoTitle","toUpperCase","infoText","profileStatus","ProfileContainer","match","authUserId","params","getProfileData","getStatus","useMatch","Header","headerTitle","logo","title","headerLogin","logOut","logout","userid","SET_USERS_DATA","login","setUsersData","payload","getAuth","authReducer","HeaderAPIContainer","HeaderContainer","LoginForm","initialValues","validationSchema","SignInSchema","onSubmit","values","resetForm","setSubmitting","errors","touched","formInput","placeholder","error","messageEmail","messagePassword","formCheckbox","formButton","yup","shape","required","min","max","Login","wrapper","LoginContainer","INIT_SUCCESS","initialized","appReducer","App","initialize","app","path","element","DialogsContainer","FindUsersContainer","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a07f44e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Preloader_container__2B_5C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContent\":\"Navbar_navContent__CEjJZ\",\"item\":\"Navbar_item__278OC\",\"active\":\"Navbar_active__3F0dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__3B23T\",\"imgContainer\":\"Profile_imgContainer__3eGgO\",\"imgMutableContainer\":\"Profile_imgMutableContainer__3Mmpn\",\"otherContainer\":\"Profile_otherContainer__2OITU\",\"userInfo\":\"Profile_userInfo__1j_Wc\",\"userInfoContainer\":\"Profile_userInfoContainer__2gkVh\",\"info\":\"Profile_info__1MOwd\",\"infoTitle\":\"Profile_infoTitle__3B1OP\",\"infoText\":\"Profile_infoText__1MVC_\",\"posts\":\"Profile_posts__-uJz0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__lUbiE\",\"dialogs\":\"Dialogs_dialogs__8-eVn\",\"dialogsTitle\":\"Dialogs_dialogsTitle__U24hd\",\"dialogItems\":\"Dialogs_dialogItems__1N_VY\",\"messages\":\"Dialogs_messages__1Gim0\",\"messagesUser\":\"Dialogs_messagesUser__QG9kS\",\"messagesUserImage\":\"Dialogs_messagesUserImage__1vZ05\",\"messagesUserName\":\"Dialogs_messagesUserName__1iygx\",\"messageItems\":\"Dialogs_messageItems__2ZCZI\",\"messageSend\":\"Dialogs_messageSend__1Wj6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2Vsu3\",\"container\":\"Login_container__1Rpns\",\"formCheckbox\":\"Login_formCheckbox__zrYE1\",\"formButton\":\"Login_formButton__2ELLp\",\"error\":\"Login_error__3Uhir\"};","import React from \"react\";\r\nimport styles from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav>\r\n            <div className={styles.navContent}>\r\n                <div className={styles.item}>\r\n                    <NavLink to=\"/profile\" className={({ isActive }) =>  isActive ? `${styles.active}` : \"\"}>Profile</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to=\"/dialogs\" className={({ isActive }) =>  isActive ? `${styles.active}` : \"\"}>Messages</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to=\"/friends\" className={({ isActive }) =>  isActive ? `${styles.active}` : \"\"}>Friends</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to=\"/find_friends\" className={({ isActive }) =>  isActive ? `${styles.active}` : \"\"}>Find Friends</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to=\"/news\" className={({ isActive }) =>  isActive ? `${styles.active}` : \"\"}>News</NavLink>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <NavLink to=\"/music\" className={({ isActive }) =>  isActive ? `${styles.active}` : \"\"}>Music</NavLink>\r\n                </div>\r\n            </div>\r\n            <div className={styles.navSettings}>\r\n                <div className={styles.item}>\r\n                    <a href=\"/#\">Settings</a>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: \"Eldar\", message: \"Hey, Kirill, do you like a...?\"},\r\n        {id: 2, name: \"Drug\", message: \"go bf\"},\r\n        {id: 3, name: \"Egor\", message: \"hahahah\"},\r\n    ],\r\n    messagesData: [\r\n        {id: 1, name: \"Eldar\", message: \"Hey, Kirill, do you like a...\"},\r\n        {id: 2, name: \"Kirill\", message: \"bf1?\"},\r\n        {id: 3, name: \"Eldar\", message: \"no\"},\r\n    ],\r\n    newMessageText: 'message text'\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            if (state.newMessageText !== '') {\r\n                return {\r\n                    ...state,\r\n                    newMessageText: '',\r\n                    messagesData: [...state.messagesData, {\r\n                        id: 4,\r\n                        name: \"Kirill\",\r\n                        message: state.newMessageText,\r\n                    }]\r\n                }\r\n            }\r\n            return state;\r\n\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            return { ...state, newMessageText: action.newText };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = () => ({type: ADD_MESSAGE});\r\n\r\nexport const updateNewMessageTextActionCreator = (text) => ({\r\n    type: UPDATE_NEW_MESSAGE_TEXT,\r\n    newText: text\r\n});\r\n\r\nexport default dialogsReducer;","export default __webpack_public_path__ + \"static/media/Anos.5dc42490.jpg\";","import React from \"react\";\r\nimport styles from './DialogItem.module.css'\r\nimport avatar from '../../../assets/img/Anos.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <NavLink to={`/dialogs/${props.id}`} className={({isActive}) => isActive ? `${styles.active}` : \"\"}>\r\n            <div className={styles.container}>\r\n                <img src={avatar} alt='#'/>\r\n                <div className={styles.item}>\r\n                    <div className={styles.itemName}>\r\n                        {props.name}\r\n                    </div>\r\n                    <div className={styles.message}>\r\n                        <div className={styles.messageItem}>\r\n                            {props.message}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem","export default __webpack_public_path__ + \"static/media/avatar.b7b1738b.jpg\";","import React from \"react\";\r\nimport styles from './Messages.module.css'\r\nimport avatar from \"../../../assets/img/avatar.jpg\";\r\nimport avatarAnos from \"../../../assets/img/Anos.jpg\";\r\n\r\nconst Messages = (props) => {\r\n\r\n    let image = avatar;\r\n\r\n    if (props.name === 'Eldar') {\r\n        image = avatarAnos\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <img src={image} alt='#'/>\r\n            <div className={styles.item}>\r\n                <div className={styles.userName}>\r\n                    {props.name}\r\n                </div>\r\n                <div className={styles.userMessage}>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages","import React from \"react\";\r\nimport styles from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItems/DialogItem\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport avatar from \"../../assets/img/Anos.jpg\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsData.map(\r\n        dialog => <DialogItem id={dialog.id}\r\n                              name={dialog.name}\r\n                              message={dialog.message}\r\n                              key={dialog.id}\r\n        />\r\n    );\r\n\r\n    let messagesElements = props.messagesData.map(\r\n        message => <Messages id={message.id}\r\n                             name={message.name}\r\n                             message={message.message}\r\n                             key={message.id}\r\n        />\r\n    );\r\n\r\n    let newMessageElement = React.createRef();\r\n\r\n    let addMessage = () => {\r\n        props.addMessage();\r\n    }\r\n\r\n    let onMessageChange = () => {\r\n\r\n        let text = newMessageElement.current.value;\r\n        props.onMessageChange(text);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.dialogs}>\r\n                <div className={styles.dialogsTitle}>\r\n                    Dialogs\r\n                </div>\r\n                <div className={styles.dialogItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <div className={styles.messages}>\r\n                <div className={styles.messagesUser}>\r\n                    <div className={styles.messagesUserName}>\r\n                        Eldarbek\r\n                        {/*{`${props.state.dialogsData[0].name}`}*/}\r\n                    </div>\r\n                    <div className={styles.messagesUserImage}>\r\n                        <img src={avatar} alt='#'/>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div className={styles.messageItems}>\r\n                    {messagesElements}\r\n                </div>\r\n                <div className={styles.messageSend}>\r\n                    <textarea onChange={onMessageChange} ref={newMessageElement} rows={1}\r\n                              value={props.newMessageText}/>\r\n                    <button onClick={addMessage}>Send Message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import {addMessageActionCreator, updateNewMessageTextActionCreator,} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (store) => {\r\n    return {\r\n        ...store.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {dispatch(addMessageActionCreator())},\r\n        onMessageChange: (text) => {dispatch(updateNewMessageTextActionCreator(text))},\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': '67e9bc59-d756-4699-841e-f4005ff4fe7c'},\r\n})\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(props) {\r\n        return (\r\n            instance.get(`users?page=${props.currentPage}&count=${props.pageSize}`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n\r\n    followTo(props) {\r\n        return (\r\n                instance.post(`follow/${props.userId}`)\r\n                    .then(response => response.data)\r\n        )\r\n    },\r\n\r\n    unfollowTo(props) {\r\n        return (\r\n            instance.delete(`follow/${props.userId}`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfileData(userId) {\r\n        return (\r\n            instance.get(`profile/${userId}`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return (\r\n            instance.get(`profile/status/${userId}`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return (\r\n            instance.put('profile/status', {status: status})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n    getAuth() {\r\n        return (\r\n            instance.get(`auth/me`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n\r\n    login(email, password, rememberMe) {\r\n        return (\r\n            instance.post(`auth/login`, {email, password, rememberMe})\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n\r\n    logout() {\r\n        return (\r\n            instance.delete(`auth/login`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UPDATE_NEW_FIND_USERS_TEXT = 'UPDATE-NEW-FIND-USERS-TEXT';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst IS_FOLLOWING_PROGRESS = 'IS-FOLLOWING-PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    newFindUsersText: 'Who are you?',\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst findUsersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: !user.followed}\r\n                    }\r\n                    return user\r\n                }),\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n\r\n        case IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(\r\n                        id => id !== action.userId\r\n                    )],\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users],\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case UPDATE_NEW_FIND_USERS_TEXT:\r\n            return {...state, newFindUsersText: action.newText};\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.newPage};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => ({\r\n    type: FOLLOW,\r\n    userId: userId\r\n});\r\n\r\nexport const setUsers = (data) => ({\r\n    type: SET_USERS,\r\n    users: data.items,\r\n    totalUsersCount: data.totalCount,\r\n});\r\n\r\nexport const setCurrentPage = (page) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    newPage: page\r\n});\r\n\r\nexport const updateNewFindUsersText = (text) => ({\r\n    type: UPDATE_NEW_FIND_USERS_TEXT,\r\n    newText: text\r\n});\r\n\r\nexport const fetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching: isFetching,\r\n});\r\n\r\nexport const followingInProgress = (followingInProgress, userId) => ({\r\n    type: IS_FOLLOWING_PROGRESS,\r\n    followingInProgress: followingInProgress,\r\n    userId: userId,\r\n});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (async (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(fetching(true));\r\n        let response = await usersAPI.getUsers({\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n        })\r\n        dispatch(setUsers(response));\r\n        dispatch(fetching(false));\r\n    });\r\n}\r\n\r\nexport const followToggle = (userId, followedStatus) => {\r\n    return (async (dispatch) => {\r\n        dispatch(followingInProgress(true, userId));\r\n        let response = await (!followedStatus\r\n            ? usersAPI.followTo({userId})\r\n            : usersAPI.unfollowTo({userId}))\r\n        if (response.resultCode === 0) {\r\n            dispatch(follow(userId));\r\n            dispatch(followingInProgress(false))\r\n        }\r\n    });\r\n}\r\n\r\nexport default findUsersReducer;","import React from \"react\";\r\nimport styles from './UsersItem.module.css'\r\nimport avatar from '../../../assets/img/Anos.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst UsersItem = (props) => {\r\n\r\n    let followTo = () => {\r\n        props.follow(props.id, props.followedStatus);\r\n    }\r\n\r\n    let followedStatus = 'Follow'\r\n    if (props.followedStatus) {\r\n        followedStatus = 'Unfollow'\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.following}>\r\n                <img src={props.photo != null ? props.photo : avatar} alt='#'/>\r\n                <button disabled={props.followingInProgress.some(id => id === props.id)}\r\n                        onClick={followTo}>{followedStatus}\r\n                </button>\r\n            </div>\r\n            <div className={styles.info}>\r\n                <div className={styles.name}>\r\n                    <NavLink to={'/profile/' + props.id}>\r\n                        {props.name}\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.status}>\r\n                    {props.status}\r\n                </div>\r\n            </div>\r\n            <div className={styles.location}>\r\n                <div className={styles.country}>\r\n                    {/*props.location.country*/}\r\n                </div>\r\n                <div className={styles.city}>\r\n                    {/*props.location.city*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersItem","import React from \"react\";\r\nimport styles from './FindUsers.module.css';\r\n\r\nlet Paginator = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let currentPage = props.currentPage\r\n    let pages = [];\r\n\r\n    for (let i = currentPage - 2; i <= (currentPage + 2); i++) {\r\n        if ((i > 0) && (i <= pagesCount)) {\r\n            pages.push(i);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pagesCount}>\r\n            {pages.map(\r\n                page =>\r\n                    <div className={styles.pageNumber}>\r\n                        <div onClick={() => {\r\n                            props.onPageChange(page)\r\n                        }}\r\n                             className={\r\n                                 props.currentPage === page\r\n                                     ? `${styles.pageNumberActive}`\r\n                                     : \"\"\r\n                             }>{page}</div>\r\n                    </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport styles from './FindUsers.module.css'\r\nimport UsersItem from \"./UsersItems/UsersItem\";\r\nimport Paginator from \"./Paginator\";\r\n\r\nlet FindUsers = (props) => {\r\n\r\n    let onSearchChange = () => {\r\n        let text = textareaRef.current.value;\r\n        props.updateNewFindUsersText(text);\r\n    }\r\n\r\n    let textareaRef = React.createRef();\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.search}>\r\n                <textarea onChange={onSearchChange} ref={textareaRef} rows={1}\r\n                          value={props.newFindUsersText}/>\r\n                <button>Search</button>\r\n            </div>\r\n            <Paginator {...props}/>\r\n            <div className={styles.users}>\r\n                {props.users.map(\r\n                    user => <UsersItem id={user.id}\r\n                                       name={user.name}\r\n                                       status={user.status}\r\n                                       location={user.location}\r\n                                       photo={user.photos.small}\r\n                                       key={user.id}\r\n                                       followedStatus={user.followed}\r\n                                       follow={props.follow}\r\n                                       followingInProgress={props.followingInProgress}\r\n                    />\r\n                )}\r\n            </div>\r\n            <Paginator {...props}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FindUsers","export default __webpack_public_path__ + \"static/media/Loading2.f5795cff.svg\";","import preloader from \"../../../assets/img/Loading2.svg\"\r\nimport React from \"react\";\r\nimport style from \"./Preloader.module.css\"\r\n\r\nlet Preloader = (props) => {\r\n    return (<>\r\n            {\r\n                props.isFetching ?\r\n                <div className={style.container}>\r\n                    <img src={preloader} alt='#'/>\r\n                </div> : <div/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followToggle, getUsers,\r\n    updateNewFindUsersText\r\n} from \"../../redux/find-users-reducer\";\r\nimport FindUsers from \"./FindUsers\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass FindUsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.findUsersPage.currentPage, this.props.findUsersPage.pageSize);\r\n    }\r\n\r\n    onPageChange = (page) => {\r\n        if (page !== this.props.findUsersPage.currentPage) {\r\n            this.props.getUsers(page, this.props.findUsersPage.pageSize);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n                <Preloader isFetching={this.props.findUsersPage.isFetching}\r\n                />\r\n                <FindUsers {...this.props.findUsersPage}\r\n                           updateNewFindUsersText={this.props.updateNewFindUsersText}\r\n                           onPageChange={this.onPageChange}\r\n                           follow={this.props.followToggle}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (store) => {\r\n    return {\r\n        findUsersPage: store.findUsersPage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            updateNewFindUsersText,\r\n            getUsers,\r\n            followToggle,\r\n        }),\r\n    withAuthRedirect,\r\n)(FindUsersAPIComponent)","export default __webpack_public_path__ + \"static/media/backgroundArt.59e9f6f3.jpg\";","import React from \"react\";\r\nimport styles from './Post.module.css'\r\nimport avatar from '../../../../assets/img/avatar.jpg'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.post}>\r\n            <div className={styles.userInfo}>\r\n                <img src={avatar} alt=\"#\"/>\r\n                <div className={styles.userName}>\r\n                    {/*{props.name}*/}D4Rg1\r\n                </div>\r\n            </div>\r\n            <div className={styles.postContent}>\r\n                <div className={styles.postText}>\r\n                    {props.message}\r\n                </div>\r\n                <div className={styles.likes}>\r\n                    <div className={styles.likePost}>Like It</div>\r\n                    <div className={styles.likesCounts}>\r\n                        {props.likesCount}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport styles from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.profilePage.postsData.map(\r\n        post => <Post id={post.id}\r\n                      name={post.name}\r\n                      message={post.message}\r\n                      likesCount={post.likesCount}\r\n                      key={post.id}\r\n        />\r\n    );\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let addPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let updateNewPostText = () => {\r\n\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.posts}>\r\n                <div className={styles.postsTitle}>\r\n                    My Posts\r\n                </div>\r\n                <div className={styles.postsSend}>\r\n                    <textarea rows={1} onChange={updateNewPostText} ref={newPostElement} value={props.profilePage.newPostText}/>\r\n                    <button onClick={addPost}>Send Post</button>\r\n                </div>\r\n            </div>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst SET_STATUS = 'SET-STATUS';\r\n\r\nlet initialState = {\r\n    postsData: [/*\r\n        {id: 1, name: \"D4Rg1\", message: \"Hey, do you like a...?\", likesCount: \"117\"},\r\n        {\r\n            id: 2, name: \"D4Rg1\",\r\n            message: \"\",\r\n            likesCount: \"153\"\r\n        },\r\n    */],\r\n    profileData: null/*{\r\n        aboutMe: null,\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: null,\r\n        fullName: null,\r\n        userId: 1,\r\n        photos: {\r\n            small: null,\r\n            large: null\r\n        }\r\n    }*/,\r\n    newPostText: 'post text',\r\n    isFetching: true,\r\n    status: null,\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            if (state.newPostText !== '') {\r\n                return {\r\n                    ...state,\r\n                    newPostText: '',\r\n                    postsData: [...state.postsData, {\r\n                        id: 3,\r\n                        message: state.newPostText,\r\n                        likesCount: 0,\r\n                    }]\r\n                }\r\n            }\r\n            return state;\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profileData: action.data,\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {...state, newPostText: action.newText};\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = () => ({type: ADD_POST});\r\n\r\nexport const updateNewPostText = (text) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: text\r\n});\r\n\r\nexport const setUserProfile = (data) => ({\r\n    type: SET_USER_PROFILE,\r\n    data: data\r\n});\r\n\r\nexport const setStatus = (statusText) => ({\r\n    type: SET_STATUS,\r\n    status: statusText\r\n});\r\n\r\nexport const fetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching: isFetching,\r\n});\r\n\r\nexport const getProfileData = (userId) => {\r\n    return (async (dispatch) => {\r\n        let response = await profileAPI.getProfileData(userId)\r\n        dispatch(setUserProfile(response));\r\n        dispatch(fetching(false));\r\n    });\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n    return (async (dispatch) => {\r\n        dispatch(fetching(true));\r\n        let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response));\r\n        dispatch(fetching(false));\r\n    });\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return (async (dispatch) => {\r\n        dispatch(fetching(true));\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n        dispatch(fetching(false));\r\n    });\r\n}\r\n\r\nexport default profileReducer;","import MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, updateNewPostText} from \"../../../redux/profile-reducer\";\r\n\r\nlet mapStateToProps = (store) => {\r\n    return {\r\n        profilePage: store.profilePage,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,\r\n    {\r\n        addPost,\r\n        updateNewPostText,\r\n    })(MyPosts);\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport styles from './ProfileStatus.module.css'\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n        statusChanged: false,\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        this.setState({\r\n            editMode: !this.state.editMode,\r\n        });\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value,\r\n            statusChanged: true,\r\n        });\r\n    }\r\n\r\n    onClickApply = () => {\r\n        this.props.updateStatus(this.state.status);\r\n        this.setState({\r\n            statusChanged: false,\r\n        });\r\n    }\r\n\r\n    onClickCancel = () => {\r\n        this.setState({\r\n            status: this.props.status,\r\n            statusChanged: false,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n                {'Status:  '}\r\n                {this.props.isOwner\r\n                    ? (\r\n                        !this.state.editMode\r\n                            ?\r\n                            <div className={styles.statusContainer}>\r\n                        <span onClick={this.toggleEditMode}>\r\n                            {this.state.status ? this.state.status : 'No status'}\r\n                        </span>\r\n                                {this.state.statusChanged\r\n                                    ? <div>\r\n                                        <button onClick={this.onClickApply}>Apply</button>\r\n                                        <button onClick={this.onClickCancel}>Cancel</button>\r\n                                    </div>\r\n                                    : <div/>\r\n                                }\r\n                            </div>\r\n                            :\r\n                            <div className={styles.statusEditor}>\r\n                                <input autoFocus={true}\r\n                                       onChange={this.onStatusChange}\r\n                                       onBlur={this.toggleEditMode}\r\n                                       value={this.state.status}\r\n                                />\r\n                            </div>\r\n                    )\r\n                    : (this.state.status ? this.state.status : 'No status')\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from \"react\";\r\nimport backArt from '../../assets/img/backgroundArt.jpg'\r\nimport userArt from '../../assets/img/avatar.jpg'\r\nimport styles from './Profile.module.css'\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    if (!props.profileData) {\r\n        return <></>\r\n    }\r\n\r\n    let name = ' Name';\r\n    if (props.profileData.fullName !== null) {\r\n        name = ' ' + props.profileData.fullName\r\n    }\r\n\r\n    let aboutMe = ' About Me';\r\n    if (props.profileData.aboutMe !== null) {\r\n        aboutMe = ' ' + props.profileData.aboutMe\r\n    }\r\n\r\n    let webSite = ' Web Site';\r\n    if (props.profileData.contacts.website !== null) {\r\n        webSite = ' ' + props.profileData.contacts.website\r\n    }\r\n\r\n    let lookingForAJob;\r\n    if (props.profileData.lookingForAJob === true) {\r\n        lookingForAJob = ' Yes'\r\n    } else {\r\n        lookingForAJob = ' No'\r\n    }\r\n\r\n    let lookingForAJobDescription = ' Description';\r\n    if (props.profileData.lookingForAJobDescription !== null) {\r\n        lookingForAJobDescription = ' ' + props.profileData.lookingForAJobDescription\r\n    }\r\n\r\n    let smallPhoto = userArt;\r\n    if (props.profileData.photos.small !== null) {\r\n        smallPhoto = props.profileData.photos.small\r\n    }\r\n\r\n    let largePhoto = backArt;\r\n    if (props.profileData.photos.large !== null) {\r\n        largePhoto = props.profileData.photos.large\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.imgContainer}>\r\n                {!props.isOwner\r\n                    ? <img src={largePhoto} alt=\"#\"/>\r\n                    : <div className={styles.imgMutableContainer}>\r\n                        <img src={largePhoto} alt=\"#\"/>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className={styles.otherContainer}>\r\n                <div className={styles.userInfo}>\r\n                    <div className={styles.userInfoContainer}>\r\n\r\n                        {!props.isOwner\r\n                            ? <img src={smallPhoto} alt=\"#\"/>\r\n                            : <div className={styles.imgMutableContainer}>\r\n                                <img src={smallPhoto} alt=\"#\"/>\r\n                            </div>\r\n                        }\r\n                        <div className={styles.info}>\r\n                            <div className={styles.infoTitle}>\r\n                                {name.toUpperCase()}\r\n                            </div>\r\n                            <div className={styles.infoText}>\r\n                                <div>About Me:\r\n                                    <span>{aboutMe}</span>\r\n                                </div>\r\n                                <div>Looking For a Job:\r\n                                    <span>{lookingForAJob}</span>\r\n                                </div>\r\n                                <div>Description:\r\n                                    <span>{lookingForAJobDescription}</span>\r\n                                </div>\r\n                                <div>Web-site:\r\n                                    <span>{webSite}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <ProfileStatus status={props.profileStatus}\r\n                                   updateStatus={props.updateStatus}\r\n                                   isOwner={props.isOwner}\r\n                    />\r\n                </div>\r\n                <div className={styles.posts}>\r\n                    <MyPostsContainer/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileData, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {useMatch} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId;\r\n        if (this.props.match === null) {\r\n            userId = this.props.authUserId;\r\n        }\r\n        else {\r\n            userId = this.props.match.params.userId;\r\n        }\r\n        this.props.getProfileData(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match !== prevProps.match) {\r\n            let userId;\r\n            if (this.props.match === null) {\r\n                userId = this.props.authUserId;\r\n            }\r\n            else {\r\n                userId = this.props.match.params.userId;\r\n            }\r\n            this.props.getProfileData(userId);\r\n            this.props.getStatus(userId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n                <Preloader isFetching={this.props.profilePage.isFetching}\r\n                />\r\n                <Profile profileData={this.props.profilePage.profileData}\r\n                         updateStatus={this.props.updateStatus}\r\n                         profileStatus={this.props.profilePage.status}\r\n                         isOwner={!this.props.match}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (store) => {\r\n    return {\r\n        profilePage: store.profilePage,\r\n        authUserId: store.auth.userId,\r\n    }\r\n}\r\n\r\nconst ProfileMatch = (props) => {\r\n    let match = useMatch('profile/:userId/')\r\n    return (\r\n        <ProfileContainer {...props} match={match}/>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfileData, getStatus, updateStatus}),\r\n    withAuthRedirect,\r\n)(ProfileMatch)","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport logo from '../../assets/img/logo.svg'\r\nimport styles from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <div className={styles.headerTitle}>\r\n                <img src={logo} alt=\"#\"/>\r\n                <div className={styles.title}>Social Network by Musenov Kirill</div>\r\n            </div>\r\n            <div className={styles.headerLogin}>\r\n                {!props.isAuth\r\n                    ? <NavLink to={'/login'}>Login</NavLink>\r\n                    : <div className={styles.logOut}>\r\n                        {props.name}\r\n                        <button onClick={props.logout}>Log Out</button>\r\n                    </div>}\r\n                {props.userid}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {authAPI} from \"../api/api\";\r\n\r\nconst SET_USERS_DATA = 'SET-USERS-DATA'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USERS_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUsersData = (payload) => ({\r\n    type: SET_USERS_DATA,\r\n    payload: {\r\n        userId: payload.data.id,\r\n        email: payload.data.email,\r\n        login: payload.data.login,\r\n        isAuth: payload.isAuth,\r\n    },\r\n});\r\n\r\nexport const getAuth = () => {\r\n    return (async (dispatch) => {\r\n        let response = await authAPI.getAuth()\r\n        if (response.resultCode === 0) {\r\n            dispatch(setUsersData({data: response.data, isAuth: true}));\r\n        } else {\r\n            dispatch(setUsersData({data: response.data, isAuth: false}));\r\n        }\r\n    });\r\n}\r\n\r\nexport const login = (props) => {\r\n    return (async (dispatch) => {\r\n        let response = await authAPI.login(props.values.email, props.values.password, props.values.rememberMe)\r\n        if (response.resultCode === 0) {\r\n            dispatch(getAuth());\r\n            props.setSubmitting(false);\r\n            props.resetForm();\r\n        } else {\r\n            props.setSubmitting(false);\r\n            props.setStatus({\r\n                messageEmail: response.messages[0],\r\n                messagePassword: response.messages[1]\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport const logout = () => {\r\n    return (async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n        if (response.resultCode === 0) {\r\n            dispatch(getAuth());\r\n        }\r\n    });\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout, setUsersData} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderAPIContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header isAuth={this.props.auth.isAuth}\r\n                    name={this.props.auth.login}\r\n                    logout={this.props.logout}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (store) => {\r\n    return {\r\n        auth: store.auth,\r\n    }\r\n}\r\n\r\nconst HeaderContainer = connect(mapStateToProps,\r\n    {\r\n        setUsersData,\r\n        logout,\r\n    })(HeaderAPIContainer);\r\n\r\nexport default HeaderContainer","import React from \"react\";\r\nimport styles from './Login.module.css';\r\nimport {Formik, Field, Form} from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\nconst Login = (props) => {\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.container}>\r\n                <h1>Login</h1>\r\n                <LoginForm login={props.login}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                password: '',\r\n                rememberMe: false,\r\n            }}\r\n            validationSchema={SignInSchema}\r\n            onSubmit={ (values, { resetForm, setStatus, setSubmitting }) => {\r\n                props.login({values, setStatus, resetForm, setSubmitting})\r\n            }}\r\n        >\r\n            {({errors, touched, status}) => (\r\n                <Form>\r\n                    <div className={styles.formInput}>\r\n                        <Field name={'email'} placeholder={\"Email\"}/>\r\n                        {errors.email && touched.email\r\n                            ? <div className={styles.error}>{errors.email}</div>\r\n                            : null}\r\n                        {status && status.messageEmail\r\n                            ? <div className={styles.error}>{status.messageEmail}</div>\r\n                            : null}\r\n                    </div>\r\n                    <div className={styles.formInput}>\r\n                        <Field name={'password'} placeholder={\"Password\"} type={'password'}/>\r\n                        {errors.password && touched.password\r\n                            ? <div className={styles.error}>{errors.password}</div>\r\n                            : null}\r\n                        {status && status.messagePassword\r\n                            ? <div className={styles.error}>{status.messagePassword}</div>\r\n                            : null}\r\n                    </div>\r\n                    <div className={styles.formCheckbox}>\r\n                        <Field name={'rememberMe'} type={\"checkbox\"}/> Remember me\r\n                    </div>\r\n                    <div className={styles.formButton}>\r\n                        <button type=\"submit\">Sign In</button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst SignInSchema = yup.object().shape({\r\n    email: yup.string().email('Invalid email').required('Required'),\r\n    password: yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\r\n})\r\n\r\nexport default Login","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render() {\r\n        if (this.props.auth.isAuth) {\r\n            return <Navigate to={'/profile'} />\r\n        }\r\n        return (<>\r\n                <Preloader/>\r\n                <Login login={this.props.login}\r\n                       isAuth={this.props.auth.isAuth}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (store) => {\r\n    return {\r\n        auth: store.auth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {login})(LoginContainer);","import {getAuth} from \"./auth-reducer\";\r\n\r\nconst INIT_SUCCESS = 'INIT-SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: action.initialized,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initialized = (props) => ({\r\n    type: INIT_SUCCESS,\r\n    initialized: props,\r\n});\r\n\r\nexport const initialize = () => {\r\n    return ((dispatch) => {\r\n        dispatch(getAuth()).then(() => dispatch(initialized(true)));\r\n    });\r\n}\r\n\r\nexport default appReducer;","import './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport FindUsersContainer from \"./components/FindUsers/FindUsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginContainer from \"./components/Login/LoginContainer\";\nimport {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {initialize} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initialize();\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <div className=\"App-wrapper\">\n                        <HeaderContainer/>\n                        <Navbar/>\n                        <div className=\"content\">\n                            {!this.props.app.initialized\n                                ? <Preloader/>\n                                : <Routes>\n                                    <Route path=\"/profile/*\" element={\n                                        <ProfileContainer/>\n                                    }/>\n                                    <Route path=\"/dialogs/*\" element={\n                                        <DialogsContainer/>\n                                    }/>\n                                    <Route path=\"/find_friends/*\" element={\n                                        <FindUsersContainer/>\n                                    }/>\n                                    <Route path=\"/login/*\" element={\n                                        <LoginContainer/>\n                                    }/>\n                                </Routes>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nlet mapStateToProps = (store) => {\n    return {\n        app: store.app,\n    }\n}\n\nexport default connect(mapStateToProps, {initialize})(App);\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport findUsersReducer from \"./find-users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    findUsersPage: findUsersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UsersItem_container__VAbId\",\"following\":\"UsersItem_following__OIha-\",\"info\":\"UsersItem_info__1_jZt\",\"name\":\"UsersItem_name__U1nFZ\",\"status\":\"UsersItem_status__3ST2X\",\"location\":\"UsersItem_location__3KUf8\",\"country\":\"UsersItem_country__GL30U\",\"city\":\"UsersItem_city__559E7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1ffCS\",\"userInfo\":\"Post_userInfo__RAQ3Z\",\"userName\":\"Post_userName__c7Ys0\",\"postContent\":\"Post_postContent__dgAID\",\"postText\":\"Post_postText__3F8MI\",\"likes\":\"Post_likes__UkGIy\",\"likePost\":\"Post_likePost__2vU5R\",\"active\":\"Post_active__1mNXf\",\"likesCounts\":\"Post_likesCounts__39Av3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FindUsers_container__137HA\",\"search\":\"FindUsers_search__13PRA\",\"pagesCount\":\"FindUsers_pagesCount__1kEFY\",\"pageNumber\":\"FindUsers_pageNumber__ozwpZ\",\"pageNumberActive\":\"FindUsers_pageNumberActive__3PhTQ\",\"users\":\"FindUsers_users__2R3B1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DialogItem_container__1mIkp\",\"item\":\"DialogItem_item__UnnJs\",\"itemName\":\"DialogItem_itemName__3vAUX\",\"message\":\"DialogItem_message__2l10F\",\"messageItem\":\"DialogItem_messageItem__24twA\",\"active\":\"DialogItem_active__2yfTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Messages_container__15ZFT\",\"item\":\"Messages_item__2LaXZ\",\"userName\":\"Messages_userName__3s3XK\",\"userMessage\":\"Messages_userMessage__1VDwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__LSjmD\",\"postsTitle\":\"MyPosts_postsTitle__1KF3a\",\"postsSend\":\"MyPosts_postsSend__TsmNw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTitle\":\"Header_headerTitle__67goC\",\"title\":\"Header_title__22-MO\",\"headerLogin\":\"Header_headerLogin__2gxWQ\",\"logOut\":\"Header_logOut__4D1VC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileStatus_container__2wZ0R\",\"statusContainer\":\"ProfileStatus_statusContainer__2O6Q5\",\"statusEditor\":\"ProfileStatus_statusEditor__oy1pH\"};"],"sourceRoot":""}